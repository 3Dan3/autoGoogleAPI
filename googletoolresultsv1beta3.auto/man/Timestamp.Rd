% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/toolresults_objects.R
\name{Timestamp}
\alias{Timestamp}
\title{Timestamp Object}
\usage{
Timestamp(nanos = NULL, seconds = NULL)
}
\arguments{
\item{nanos}{Non-negative fractions of a second at nanosecond resolution}

\item{seconds}{Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z}
}
\value{
Timestamp object
}
\description{
Timestamp Object
}
\details{
Autogenerated via \code{\link[googleAuthR]{gar_create_api_objects}}
A Timestamp represents a point in time independent of any time zone or calendar, represented as seconds and fractions of seconds at nanosecond resolution in UTC Epoch time. It is encoded using the Proleptic Gregorian Calendar which extends the Gregorian calendar backwards to year one. It is encoded assuming all minutes are 60 seconds long, i.e. leap seconds are 'smeared' so that no leap second table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By restricting to that range, we ensure that we can convert to and from RFC 3339 date strings. See [https://www.ietf.org/rfc/rfc3339.txt](https://www.ietf.org/rfc/rfc3339.txt).Example 1: Compute Timestamp from POSIX `time()`.Timestamp timestamp; timestamp.set_seconds(time(NULL)); timestamp.set_nanos(0);Example 2: Compute Timestamp from POSIX `gettimeofday()`.struct timeval tv; gettimeofday(&tv, NULL);Timestamp timestamp; timestamp.set_seconds(tv.tv_sec); timestamp.set_nanos(tv.tv_usec * 1000);Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.FILETIME ft; GetSystemTimeAsFileTime(&ft); UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;// A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z. Timestamp timestamp; timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL)); timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.long millis = System.currentTimeMillis();Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000) .setNanos((int) ((millis % 1000) * 1000000)).build();Example 5: Compute Timestamp from current time in Python.timestamp = Timestamp() timestamp.GetCurrentTime()
}
\seealso{
Other res: \code{\link{Any}}, \code{\link{Duration}},
  \code{\link{Execution}}, \code{\link{FailureDetail}},
  \code{\link{FileReference}}, \code{\link{History}},
  \code{\link{Image}}, \code{\link{InconclusiveDetail}},
  \code{\link{ListExecutionsResponse}},
  \code{\link{ListHistoriesResponse}},
  \code{\link{ListStepThumbnailsResponse}},
  \code{\link{ListStepsResponse}}, \code{\link{Outcome}},
  \code{\link{ProjectSettings}},
  \code{\link{PublishXunitXmlFilesRequest}},
  \code{\link{SkippedDetail}}, \code{\link{StackTrace}},
  \code{\link{Status}},
  \code{\link{StepDimensionValueEntry}},
  \code{\link{StepLabelsEntry}}, \code{\link{Step}},
  \code{\link{SuccessDetail}},
  \code{\link{TestCaseReference}},
  \code{\link{TestExecutionStep}}, \code{\link{TestIssue}},
  \code{\link{TestSuiteOverview}},
  \code{\link{TestTiming}}, \code{\link{Thumbnail}},
  \code{\link{ToolExecutionStep}},
  \code{\link{ToolExecution}}, \code{\link{ToolExitCode}},
  \code{\link{ToolOutputReference}}
}

