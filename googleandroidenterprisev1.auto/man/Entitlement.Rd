% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/androidenterprise_objects.R
\name{Entitlement}
\alias{Entitlement}
\title{Entitlement Object}
\usage{
Entitlement(productId = NULL, reason = NULL)
}
\arguments{
\item{productId}{The ID of the product that the entitlement is for, e}

\item{reason}{The reason for the entitlement, e}
}
\value{
Entitlement object
}
\description{
Entitlement Object
}
\details{
Autogenerated via \code{\link[googleAuthR]{gar_create_api_objects}}
The existence of an entitlement resource means that a user has the right to use a particular app on any of their devices. This might be because the app is free or because they have been allocated a license to the app from a group license purchased by the enterprise.It should always be true that a user has an app installed on one of their devices only if they have an entitlement to it. So if an entitlement is deleted, the app will be uninstalled from all devices. Similarly if the user installs an app (and is permitted to do so), or the EMM triggers an install of the app, an entitlement to that app is automatically created. If this is impossible - e.g. the enterprise has not purchased sufficient licenses - then installation fails.Note that entitlements are always user specific, not device specific; a user may have an entitlement even though they have not installed the app anywhere. Once they have an entitlement they can install the app on multiple devices.The API can be used to create an entitlement. If the app is a free app, a group license for that app is created. If it's a paid app, creating the entitlement consumes one license; it remains consumed until the entitlement is removed. Optionally an installation of the app on all the user's managed devices can be triggered at the time the entitlement is created. An entitlement cannot be created for an app if the app requires permissions that the enterprise has not yet accepted.Entitlements for paid apps that are due to purchases by the user on a non-managed profile will have 'userPurchase' as entitlement reason; those entitlements cannot be removed via the API.
}
\seealso{
Other Entitlement functions: \code{\link{entitlements.patch}},
  \code{\link{entitlements.update}}
}

